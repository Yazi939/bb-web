/**
 * –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ Huawei —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π
 * –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü
 */

// ===== DEVICE DETECTION AND RESPONSIVE CSS LOADING =====

(function() {
    'use strict';
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤ Huawei
    function isHuaweiDevice() {
        const userAgent = navigator.userAgent.toLowerCase();
        const vendor = navigator.vendor ? navigator.vendor.toLowerCase() : '';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º User Agent –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Huawei –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤
        const huaweiIdentifiers = [
            'huawei', 'honor', 'hisuite', 'hicloud', 'emui', 'harmonyos'
        ];
        
        const isHuaweiUA = huaweiIdentifiers.some(identifier => 
            userAgent.includes(identifier)
        );
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ WebGL renderer
        let isHuaweiGPU = false;
        try {
            const canvas = document.createElement('canvas');
            const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');
            if (gl) {
                const renderer = gl.getParameter(gl.RENDERER).toLowerCase();
                isHuaweiGPU = renderer.includes('mali') || renderer.includes('adreno') || renderer.includes('kirin');
            }
        } catch (e) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ WebGL
        }
        
        return isHuaweiUA || (isHuaweiGPU && userAgent.includes('android'));
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤
    function isTabletDevice() {
        const userAgent = navigator.userAgent.toLowerCase();
        const screenWidth = window.screen.width;
        const screenHeight = window.screen.height;
        const maxScreenSize = Math.max(screenWidth, screenHeight);
        const minScreenSize = Math.min(screenWidth, screenHeight);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º User Agent –Ω–∞ –ø–ª–∞–Ω—à–µ—Ç–Ω—ã–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
        const tabletIdentifiers = [
            'ipad', 'tablet', 'kindle', 'silk', 'playbook', 'gt-p', 'sm-t', 
            'nexus 7', 'nexus 9', 'nexus 10', 'xoom', 'sch-i800', 'android.*mobile'
        ];
        
        const isTabletUA = tabletIdentifiers.some(identifier => {
            if (identifier === 'android.*mobile') {
                return /android.*mobile/i.test(userAgent);
            }
            return userAgent.includes(identifier);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞ (–ø–ª–∞–Ω—à–µ—Ç—ã –æ–±—ã—á–Ω–æ 768px-1024px)
        const isTabletScreen = (
            (minScreenSize >= 768 && maxScreenSize <= 1024) ||
            (minScreenSize >= 600 && maxScreenSize >= 960)
        );
        
        // –ò—Å–∫–ª—é—á–∞–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω—ã
        const isMobile = /mobile|phone|android.*mobile/i.test(userAgent) && maxScreenSize < 768;
        
        return (isTabletUA || isTabletScreen) && !isMobile;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö CSS —Ñ–∞–π–ª–æ–≤
    function loadResponsiveCSS() {
        const cssFiles = [
            'tablet-fixes.css',
            'global-responsive-fixes.css', 
            'fuel-trading-tablet-fixes.css',
            'additional-components-responsive.css'
        ];
        
        cssFiles.forEach((filename, index) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª
            const existingLink = document.getElementById(`responsive-css-${index}`);
            if (existingLink) {
                return; // –§–∞–π–ª —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
            }
            
            const link = document.createElement('link');
            link.rel = 'stylesheet';
            link.type = 'text/css';
            link.href = `./${filename}`;
            link.id = `responsive-css-${index}`;
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            link.onload = function() {
                console.log(`‚úÖ Responsive CSS loaded: ${filename}`);
            };
            
            link.onerror = function() {
                console.warn(`‚ö†Ô∏è Failed to load responsive CSS: ${filename}`);
            };
            
            document.head.appendChild(link);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    function applyAdditionalFixes() {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å smooth-scroll –∫ body
        document.body.classList.add('smooth-scroll');
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º -webkit-overflow-scrolling –¥–ª—è iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤
        if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {
            const style = document.createElement('style');
            style.textContent = `
                .ant-table-wrapper,
                .tableWrapper {
                    -webkit-overflow-scrolling: touch !important;
                }
            `;
            document.head.appendChild(style);
        }
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ –∫ —Ç–∞–±–ª–∏—Ü–∞–º –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
        setTimeout(() => {
            const tables = document.querySelectorAll('.ant-table-wrapper');
            tables.forEach(table => {
                table.style.overflowX = 'auto';
                const antTable = table.querySelector('.ant-table');
                if (antTable) {
                    antTable.style.tableLayout = 'fixed';
                }
            });
        }, 1000);
    }
    
    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    function initializeDeviceDetection() {
        const isHuawei = isHuaweiDevice();
        const isTablet = isTabletDevice();
        
        console.log('üîç Device Detection Results:', {
            isHuawei,
            isTablet,
            userAgent: navigator.userAgent,
            screenSize: `${window.screen.width}x${window.screen.height}`,
            viewport: `${window.innerWidth}x${window.innerHeight}`
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º CSS –∫–ª–∞—Å—Å—ã –∫ body –∏ html
        if (isHuawei) {
            document.documentElement.classList.add('huawei-device');
            document.body.classList.add('huawei-device');
            console.log('üì± Huawei device detected - applying special styles');
        }
        
        if (isTablet) {
            document.documentElement.classList.add('tablet-device');
            document.body.classList.add('tablet-device');
            console.log('üì± Tablet device detected - applying tablet styles');
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ CSS —Ñ–∞–π–ª—ã
        loadResponsiveCSS();
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        applyAdditionalFixes();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞
        let resizeTimeout;
        function handleResize() {
            clearTimeout(resizeTimeout);
            resizeTimeout = setTimeout(() => {
                console.log('üì± Screen orientation/size changed, reapplying fixes...');
                applyAdditionalFixes();
            }, 300);
        }
        
        window.addEventListener('orientationchange', handleResize);
        window.addEventListener('resize', handleResize);
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        setTimeout(() => {
            applyAdditionalFixes();
        }, 2000);
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeDeviceDetection);
    } else {
        initializeDeviceDetection();
    }
    
    // –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    window.DeviceDetection = {
        isHuaweiDevice,
        isTabletDevice,
        loadResponsiveCSS,
        applyAdditionalFixes
    };
    
})(); 